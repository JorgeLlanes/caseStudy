-- MySQL Script generated by MySQL Workbench
-- Sun Jun 26 22:23:14 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema casestudy
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema casestudy
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS casestudy DEFAULT CHARACTER SET utf8 ;
USE casestudy;

-- -----------------------------------------------------
-- Table `casestudy`.`table1`
-- -----------------------------------------------------


-- -----------------------------------------------------
-- Table `casestudy`.`Employees`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS casestudy.Employees (
  id_employee INT NOT NULL AUTO_INCREMENT,
  firstname VARCHAR(45) NOT NULL,
  lastname VARCHAR(45) NOT NULL,
  age INT NOT NULL,
  gender VARCHAR(45) NOT NULL,
  role_fk INT NULL,
  salary_fk INT NOT NULL,
  PRIMARY KEY (id_employee))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `casestudy`.`Roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS casestudy.Roles (
  id_role INT NOT NULL AUTO_INCREMENT,
  title_role VARCHAR(45) NOT NULL,
  salary_role VARCHAR(45) NOT NULL,
  fulltime_role VARCHAR(45) NOT NULL,
  parttime_role VARCHAR(45) NOT NULL,
  Employees_id_employee INT NOT NULL,
  PRIMARY KEY (id_role, Employees_id_employee),
  INDEX fk_Roles_Employees_idx (Employees_id_employee ASC),
  CONSTRAINT fk_Roles_Employees
    FOREIGN KEY (Employees_id_employee)
    REFERENCES casestudy.Employees (id_employee)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `casestudy`.`Payment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS casestudy.Payment (
  id_payment INT NOT NULL AUTO_INCREMENT,
  customer_idkey INT NOT NULL,
  amount INT NOT NULL,
  ctmpayinfo_id INT NOT NULL,
  fine_fk INT NOT NULL,
  bookid_fk INT NOT NULL,
  lostbook_fee INT NOT NULL,
  PRIMARY KEY (id_payment))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `casestudy`.`Inventory`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS mydb.Inventory (
  books INT NOT NULL,
  computers INT NOT NULL,
  printers INT NOT NULL,
  furniture INT NOT NULL,
  scanners INT NOT NULL,
  water_fountains INT NOT NULL,
  id_librarycost INT NOT NULL,
  PRIMARY KEY (id_librarycost))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `casestudy`.`CheckOuts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS casestudy.CheckOuts (
  customer_id_fk INT NOT NULL AUTO_INCREMENT,
  book_id_fk INT NOT NULL,
  checkout_date DATETIME NOT NULL,
  due_date DATETIME NOT NULL,
  overdue VARCHAR(45) NOT NULL,
  Inventory_id_librarycost INT NOT NULL,
  PRIMARY KEY (customer_id_fk, Inventory_id_librarycost),
  INDEX fk_CheckOuts_Inventory1_idx (Inventory_id_librarycost ASC),
  CONSTRAINT fk_CheckOuts_Inventory1
    FOREIGN KEY (Inventory_id_librarycost)
    REFERENCES mydb.Inventory (id_librarycost)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `casestudy`.`Books`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS casestudy.Books (
  id_books INT NOT NULL AUTO_INCREMENT,
  booktype_fk INT NOT NULL,
  title VARCHAR(45) NOT NULL,
  genre VARCHAR(45) NOT NULL,
  author VARCHAR(45) NOT NULL,
  publish_date DATETIME NOT NULL,
  page_count INT NOT NULL,
  quantity INT NOT NULL,
  rental_id INT NOT NULL,
  in_stock VARCHAR(45) NOT NULL,
  CheckOuts_customer_id_fk INT NOT NULL,
  Inventory_id_librarycost INT NOT NULL,
  Payment_id_payment INT NOT NULL,
  PRIMARY KEY (id_books, CheckOuts_customer_id_fk, Inventory_id_librarycost, Payment_id_payment),
  INDEX fk_Books_CheckOuts1_idx (CheckOuts_customer_id_fk ASC),
  INDEX fk_Books_Inventory1_idx (Inventory_id_librarycost ASC),
  INDEX fk_Books_Payment1_idx (Payment_id_payment ASC),
  CONSTRAINT fk_Books_CheckOuts1
    FOREIGN KEY (CheckOuts_customer_id_fk)
    REFERENCES casestudy.CheckOuts (customer_id_fk)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_Books_Inventory1
    FOREIGN KEY (Inventory_id_librarycost)
    REFERENCES casestudy.Inventory (id_librarycost)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_Books_Payment1
    FOREIGN KEY (Payment_id_payment)
    REFERENCES casestudy.Payment (id_payment)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `casestudy`.`Customers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS casestudy.Customers (
  id_customers INT NOT NULL AUTO_INCREMENT,
  first_name VARCHAR(45) NOT NULL,
  last_name VARCHAR(45) NOT NULL,
  age INT NOT NULL,
  gender INT NOT NULL,
  payment_info INT NOT NULL,
  address VARCHAR(45) NOT NULL,
  email VARCHAR(45) NOT NULL,
  phone_number VARCHAR(45) NOT NULL,
  create_data DATETIME NOT NULL,
  last_checkout DATETIME NOT NULL,
  overdue_books VARCHAR(45) NOT NULL,
  Payment_id_payment INT NOT NULL,
  Books_id_books INT NOT NULL,
  CheckOuts_customer_id_fk INT NOT NULL,
  PRIMARY KEY (id_customers, Payment_id_payment, Books_id_books, CheckOuts_customer_id_fk),
  INDEX fk_Customers_Payment1_idx (Payment_id_payment ASC),
  INDEX fk_Customers_Books1_idx (Books_id_books ASC),
  INDEX fk_Customers_CheckOuts1_idx (CheckOuts_customer_id_fk ASC),
  CONSTRAINT fk_Customers_Payment1
    FOREIGN KEY (Payment_id_payment)
    REFERENCES casestudy.Payment (id_payment)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_Customers_Books1
    FOREIGN KEY (Books_id_books)
    REFERENCES casestudy.Books (id_books)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_Customers_CheckOuts1
    FOREIGN KEY (CheckOuts_customer_id_fk)
    REFERENCES casestudy.CheckOuts (customer_id_fk)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `casestudy`.`bookType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS casestudy.bookType (
  bookType INT NOT NULL,
  fine_rates INT NOT NULL,
  Books_id_books INT NOT NULL,
  Books_CheckOuts_customer_id_fk INT NOT NULL,
  Payment_id_payment INT NOT NULL,
  PRIMARY KEY (Books_id_books, Books_CheckOuts_customer_id_fk, Payment_id_payment),
  INDEX fk_bookType_Payment1_idx (Payment_id_payment ASC),
  CONSTRAINT fk_bookType_Books1
    FOREIGN KEY (Books_id_books , Books_CheckOuts_customer_id_fk)
    REFERENCES casestudy.Books (id_books , CheckOuts_customer_id_fk)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_bookType_Payment1
    FOREIGN KEY (Payment_id_payment)
    REFERENCES casestudy.Payment (id_payment)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `casestudy`.`LibraryCosts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS casestudy.LibraryCosts (
  id_librarycost INT NOT NULL AUTO_INCREMENT,
  inventory INT NOT NULL,
  utilities VARCHAR(45) NOT NULL,
  employee_pay INT NOT NULL,
  Employees_id_employee INT NOT NULL,
  Inventory_id_librarycost INT NOT NULL,
  PRIMARY KEY (id_librarycost, Employees_id_employee, Inventory_id_librarycost),
  INDEX fk_LibraryCosts_Employees1_idx (Employees_id_employee ASC),
  INDEX fk_LibraryCosts_Inventory1_idx (Inventory_id_librarycost ASC),
  CONSTRAINT fk_LibraryCosts_Employees1
    FOREIGN KEY (Employees_id_employee)
    REFERENCES casestudy.Employees (id_employee)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_LibraryCosts_Inventory1
    FOREIGN KEY (Inventory_id_librarycost)
    REFERENCES casestudy.Inventory (id_librarycost)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
